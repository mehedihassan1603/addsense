import { useContext, useState } from "react";
import { AuthContext } from "../AuthProvider/AuthProvider";
import { Link, useNavigate } from "react-router-dom";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { getAuth, createUserWithEmailAndPassword, updateProfile } from "firebase/auth";
import useAxiosPublic from "../Hook/useAxiosPublic";

const Register = () => {
  const { createUser } = useContext(AuthContext);
  const navigate = useNavigate();
  const [passwordError, setPasswordError] = useState("");
  const axiosPublic = useAxiosPublic();

  const handleRegister = async (e) => {
    e.preventDefault();
    const email = e.target.email.value;
    const password = e.target.password.value;
    const phoneNumber = e.target.phoneNumber.value;
    const gender = e.target.gender.value;
    const district = e.target.district.value;
    const division = e.target.division.value;

    if (password.length < 6) {
      setPasswordError("Password must be at least 6 characters long.");
    } else if (!/[A-Z]/.test(password)) {
      setPasswordError("Password must contain at least one uppercase letter.");
    } else if (!/[!@#$%^&*()_+{}\[\]:;<>,.?~\\-]/.test(password)) {
      setPasswordError("Password must contain at least one special character.");
    } else {
      setPasswordError("");

      try {
        const auth = getAuth();
        const userCredential = await createUserWithEmailAndPassword(auth, email, password);
        const user = userCredential.user;
        await updateProfile(user, {
          displayName: name,
          photoURL: photoUrl,
        });

        // Send additional user information to /userinfo
        await axiosPublic.post("/userinfo", {
          userEmail: email,
          password: password,
          phoneNumber: phoneNumber,
          gender: gender,
          district: district,
          division: division,
          count: 0,
          rate: 0,
        });

        console.log("User profile updated successfully.");
        toast.success("Account created successfully!", {
          position: toast.POSITION.TOP_CENTER,
          autoClose: 2000,
        });

        setTimeout(() => {
          e.target.reset();
          navigate("/");
        }, 2000);
      } catch (error) {
        console.error(error);
      }
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-r from-purple-300 to-blue-300 flex items-center justify-center">
      <div className="bg-white p-8 rounded-lg shadow-md w-8/12">
        <h1 className="text-2xl font-semibold mb-4 text-center">Create Account</h1>
        <form onSubmit={handleRegister} className="grid grid-cols-2 gap-4">
          <div className=" mb-4">
            <label htmlFor="name" className="block text-gray-700 font-medium">
              Name
            </label>
            <input
              type="text"
              id="name"
              placeholder="Name"
              name="name"
              className="w-full border rounded-md px-3 py-2 focus:outline-none focus:border-blue-500"
            />
          </div>
          <div className="mb-4">
            <label htmlFor="name" className="block text-gray-700 font-medium">
              Profile Photo Link
            </label>
            <input
              type="text"
              id="PhotoUrl"
              placeholder="PhotoUrl"
              name="PhotoUrl"
              className="w-full border rounded-md px-3 py-2 focus:outline-none focus:border-blue-500"
            ></input>
          </div>
          <div className=" mb-4">
            <label htmlFor="email" className="block text-gray-700 font-medium">
              Email
            </label>
            <input
              type="email"
              id="email"
              placeholder="Email"
              name="email"
              className="w-full border rounded-md px-3 py-2 focus:outline-none focus:border-blue-500"
            />
          </div>

          <div className=" mb-4">
            <label htmlFor="password" className="block text-gray-700 font-medium">
              Password
            </label>
            <input
              type="password"
              id="password"
              placeholder="Password"
              name="password"
              className="w-full border rounded-md px-3 py-2 focus:outline-none focus:border-blue-500"
            />
            {passwordError && <p className="text-red-500">{passwordError}</p>}
          </div>

          <div className=" mb-4">
            <label htmlFor="phoneNumber" className="block text-gray-700 font-medium">
              Phone Number
            </label>
            <input
              type="text"
              id="phoneNumber"
              placeholder="Phone Number"
              name="phoneNumber"
              className="w-full border rounded-md px-3 py-2 focus:outline-none focus:border-blue-500"
            />
          </div>
            <div className="mb-4">
              <label htmlFor="gender" className="block text-gray-700 font-medium">
                Gender
              </label>
              <select
                id="gender"
                name="gender"
                className="w-full border rounded-md px-3 py-2 focus:outline-none focus:border-blue-500"
              >
                <option value="male">Male</option>
                <option value="female">Female</option>
              </select>
            </div>
            <div className="mb-4">
              <label htmlFor="district" className="block text-gray-700 font-medium">
                District
              </label>
              <input
                type="text"
                id="district"
                placeholder="District"
                name="district"
                className="w-full border rounded-md px-3 py-2 focus:outline-none focus:border-blue-500"
              />
            </div>
            <div className="mb-4">
              <label htmlFor="division" className="block text-gray-700 font-medium">
                Division
              </label>
              <input
                type="text"
                id="division"
                placeholder="Division"
                name="division"
                className="w-full border rounded-md px-3 py-2 focus:outline-none focus:border-blue-500"
              />
            </div>
            
          <div className="col-span-2">
          <div className="mt-6">
            <button
              type="submit"
              className="w-full block bg-blue-500 text-white rounded-md py-2 px-4 hover:bg-blue-600 focus:outline-none"
            >
              Register
            </button>
          </div>
          <p className="mt-2 text-center">
            Already have an Account? Please{" "}
            <span className="text-blue-500">
              <Link to="/login">Login.</Link>
            </span>
          </p>
          </div>
        </form>
        <ToastContainer></ToastContainer>
      </div>
    </div>
  );
};

export default Register;
